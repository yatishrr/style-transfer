upstream keycloak_backend {
  server keycloak:8081;
}

upstream style-transfer_frontend {
  server frontend:8501;
}

server {
    listen 80;
    server_name style-transfer.awsexpress.cloud;
    location / {
        return 301 https://$host$request_uri;
    }
}
server {
   
    proxy_busy_buffers_size   512k;
    proxy_buffers   4 512k;
    proxy_buffer_size   256k;
   
    client_max_body_size 200M;

    listen 443 ssl;
    server_name style-transfer.awsexpress.cloud;
    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    
    location / {
          proxy_pass "http://style-transfer_frontend/";
          proxy_set_header   Host $host;

	  # WebSocket support
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
    }

    location /auth/ {
          proxy_pass "http://keycloak_backend/auth/";
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
    }
    location /auth/admin {
          proxy_pass "http://keycloak_backend/auth/admin";
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
    }
 
}
ssl_protocols TLSv1.2 TLSv1.3;
ssl_prefer_server_ciphers on;
ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
